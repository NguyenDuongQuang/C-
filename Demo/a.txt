#include <iostream>
#include <string>
using namespace std;


struct Printer {
    string tenHang;  
    string loai;      
    double gia;        
    double giamGia;   
    
    Printer(string _tenHang = "", string _loai = "", double _gia = 0, double _giamGia = 0) {
        tenHang = _tenHang;
        loai = _loai;
        gia = _gia;
        giamGia = _giamGia;
    }
};

void show(Printer printers[], int n, int index) {
    if(index == n) return;
    cout << "Ten hang: " << printers[index].tenHang << ", Loai: " << printers[index].loai;
    // Hiển thị thêm thông tin về giá và giảm giá
    cout << ", Gia: " << printers[index].gia << ", Giam gia: " << printers[index].giamGia << "%" << endl;
    show(printers, n, index + 1);
}

int count(Printer printers[], int l, int r) {
    if(l >= r) return (printers[l].loai == "Mau" && printers[l].giamGia > 0) ? 1 : 0;
    
    int m = (l + r) / 2;
    int countL = count(printers, l, m);
    int countR = count(printers, m + 1, r);
    return countL + countR;
}

// Mảng x và used để tạo và theo dõi các tổ hợp
int x[100], used[100];

void print(Printer printers[], int n) {
    for(int i = 1; i <= n; i++) {
        cout << "Ten hang: " << printers[x[i] - 1].tenHang << " ---> Ban: " << i << endl;
    }
    cout << "-------------" << endl;
}

// Hàm Try - Tạo tất cả các hoán vị của n máy in
void Try(Printer printers[], int i, int n, int &count) {
    for(int j = 1; j <= n; j++) {
        if(used[j] == 0) {
            x[i] = j;
            if(i == n) {
                count++;
                print(printers, n);
            }
            else {
                used[j] = 1;
                Try(printers, i + 1, n, count);
                used[j] = 0;
            }
        }
    }
}

int main() {
    Printer printers[] = {
        {"HP", "Mau", 5000000, 10},
        {"Canon", "Den trang", 3000000, 0},
        {"Epson", "Mau", 4500000, 15},
        {"Brother", "Den trang", 2800000, 5},
        {"Samsung", "Mau", 6000000, 20}
    };
    int n = sizeof(printers) / sizeof(printers[0]);
    cout << "\n===== DANH SACH MAY IN =====\n";
    show(printers, n, 0);
    
    cout << "\nSo may in mau co giam gia > 0: " << count(printers, 0, n - 1) << endl;
    
 
    for(int i = 0; i <= n; i++) {
        used[i] = 0;
    }
    
    int countPermutations = 0;
    cout << "\nCac cach sap xep " << n << " may in tren " << n << " ban:\n";
    Try(printers, 1, n, countPermutations);
    cout << "\nTong so cach sap xep: " << countPermutations << endl;
    
    return 0;
}
